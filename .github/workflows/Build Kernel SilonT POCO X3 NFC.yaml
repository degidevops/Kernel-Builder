name: Build Kernel SilonT

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'     
        required: false
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout kernel source
      uses: actions/checkout@v3
      with:
        repository: degidevops/kernel_xiaomi_surya
        ref: richelieu
        fetch-depth: 1
        path: kernel
        
    #- name: setting build specific commit
    #  shell: bash
    #  run: |
    #    cd kernel && git config user.email degidevops@gmail.com && git# config user.name degidevops
    #    git reset --hard fe70db09560e39e4f69b3bd5ae80b2b2fc320b9a

    - name: Checkout AnyKernel3
      uses: actions/checkout@v3
      with:
        repository: degidevops/AnyKernel3
        path: packer

    - name: Setup Env
      working-directory: kernel
      run: |
        sudo apt update
        sudo apt-get install -y clang binutils-aarch64-linux-gnu llvm lld
        make O=out ARCH=arm64 SUBARCH=arm64 surya_defconfig

    - name: Setup Debug
      uses: mxschmitt/action-tmate@v3
      if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
    
    - name: Build
      working-directory: kernel
      run: |
        echo "degidevops" > .builderdata
        make -j$(nproc --all) CC=clang CROSS_COMPILE=aarch64-linux-gnu- O=out ARCH=arm64 SUBARCH=arm64 LLVM=1 LD=ld.lld

    - name: Packing Kernel
      working-directory: packer
      run: |
        cp ../kernel/out/arch/arm64/boot/Image.gz ./
        cp ../kernel/out/arch/arm64/boot/dtb.img ./
        cp ../kernel/out/arch/arm64/boot/dtbo.img ./
        zip -r9 "MSecureKernel-unsigned.zip" ./* -x .git README.md *placeholder

    - name: Upload File
      uses: actions/upload-artifact@v3
      with:
        name: Kernel File
        path: |
          packer/MSecureKernel-unsigned.zip
          
